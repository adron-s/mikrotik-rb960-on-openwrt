commit 48d2d2204b9f976c2bf7c052fc9fc56e7693b127
Author: Sergey Sergeev <adron@yapic.net>
Date:   Fri Apr 3 16:17:16 2020 +0300

    rb71xx: adds support for Mikrotiks RB960PGS. also this patch do the following:
    - changes that is necessary for mtpoe_ctrl(spidev #3) work
    - some improvements for the RB962(ethernet switch and sfp port) and RB750(swaps eth0/eth1)
    
    Signed-off-by: Sergey Sergeev <adron@yapic.net>

diff --git a/target/linux/ar71xx/base-files/etc/board.d/01_leds b/target/linux/ar71xx/base-files/etc/board.d/01_leds
index ba9e68a..ad1c421 100755
--- a/target/linux/ar71xx/base-files/etc/board.d/01_leds
+++ b/target/linux/ar71xx/base-files/etc/board.d/01_leds
@@ -653,6 +653,9 @@ rb-952ui-5ac2nd)
 	ucidef_set_led_switch "port5" "port5" "rb:green:port5" "switch0" "0x02"
 	ucidef_set_led_wlan "wlan" "WLAN" "rb:blue:wlan" "phy0tpt"
 	;;
+rb-960pgs)
+	ucidef_set_led_timer "user" "USER" "rb:green:act" "1000" "1000"
+	;;
 rb-962uigs-5hact2hnt)
 	ucidef_set_led_timer "user" "USER/SFP" "rb:green:act" "1000" "1000"
 	;;
diff --git a/target/linux/ar71xx/base-files/etc/board.d/02_network b/target/linux/ar71xx/base-files/etc/board.d/02_network
index befa032..bca624e 100755
--- a/target/linux/ar71xx/base-files/etc/board.d/02_network
+++ b/target/linux/ar71xx/base-files/etc/board.d/02_network
@@ -198,6 +198,7 @@ ar71xx_setup_interfaces()
 	rb-750gl|\
 	rb-751g|\
 	rb-951g-2hnd|\
+	rb-960pgs|\
 	rb-962uigs-5hact2hnt|\
 	wlr8100|\
 	wzr-hp-g450h)
diff --git a/target/linux/ar71xx/base-files/etc/diag.sh b/target/linux/ar71xx/base-files/etc/diag.sh
index e8df560..0b8302a 100644
--- a/target/linux/ar71xx/base-files/etc/diag.sh
+++ b/target/linux/ar71xx/base-files/etc/diag.sh
@@ -372,6 +372,7 @@ get_status_led() {
 	rb-941-2nd|\
 	rb-951ui-2nd|\
 	rb-952ui-5ac2nd|\
+	rb-960pgs|\
 	rb-962uigs-5hact2hnt|\
 	rb-lhg-5nd|\
 	rb-map-2nd|\
diff --git a/target/linux/ar71xx/base-files/lib/ar71xx.sh b/target/linux/ar71xx/base-files/lib/ar71xx.sh
index 4ba5005..e8a6a23 100755
--- a/target/linux/ar71xx/base-files/lib/ar71xx.sh
+++ b/target/linux/ar71xx/base-files/lib/ar71xx.sh
@@ -507,6 +507,9 @@ mikrotik_board_detect() {
 	*"952Ui-5ac2nD")
 		name="rb-952ui-5ac2nd"
 		;;
+	*"960PGS")
+		name="rb-960pgs"
+		;;
 	*"962UiGS-5HacT2HnT")
 		name="rb-962uigs-5hact2hnt"
 		;;
diff --git a/target/linux/ar71xx/base-files/lib/upgrade/platform.sh b/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
index 8558fde..8bd9c46 100755
--- a/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
+++ b/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
@@ -709,6 +709,7 @@ platform_check_image() {
 	rb-941-2nd|\
 	rb-951ui-2nd|\
 	rb-952ui-5ac2nd|\
+	rb-960pgs|\
 	rb-962uigs-5hact2hnt|\
 	rb-lhg-5nd|\
 	rb-map-2nd|\
@@ -735,6 +736,7 @@ platform_pre_upgrade() {
 	rb-941-2nd|\
 	rb-951ui-2nd|\
 	rb-952ui-5ac2nd|\
+	rb-960pgs|\
 	rb-962uigs-5hact2hnt|\
 	rb-lhg-5nd|\
 	rb-map-2nd|\
diff --git a/target/linux/ar71xx/files/arch/mips/ath79/mach-rbspi.c b/target/linux/ar71xx/files/arch/mips/ath79/mach-rbspi.c
index f8800f5..96e1395 100644
--- a/target/linux/ar71xx/files/arch/mips/ath79/mach-rbspi.c
+++ b/target/linux/ar71xx/files/arch/mips/ath79/mach-rbspi.c
@@ -9,6 +9,8 @@
  *  - MikroTik RouterBOARD 951Ui-2nD
  *  - MikroTik RouterBOARD 952Ui-5ac2nD
  *  - MikroTik RouterBOARD 962UiGS-5HacT2HnT
+ *  - Mikrotik RouterBOARD 960PGS (hEX PoE)
+ *  - MikroTik RouterBOARD 962UiGS-5HacT2HnT
  *  - MikroTik RouterBOARD 750UP r2
  *  - MikroTik RouterBOARD 750P-PBr2
  *  - MikroTik RouterBOARD 750 r2
@@ -25,6 +27,7 @@
  *  Copyright (C) 2017 Thibaut VARENE <varenet@parisc-linux.org>
  *  Copyright (C) 2016 David Hutchison <dhutchison@bluemesh.net>
  *  Copyright (C) 2017 Ryan Mounce <ryan@mounce.com.au>
+ *  Copyright (C) 2017-2020 Sergey Sergeev <adron@mstnt.com>
  *
  *  This program is free software; you can redistribute it and/or modify it
  *  under the terms of the GNU General Public License version 2 as published
@@ -72,8 +75,9 @@
 #define RBSPI_HAS_WAN4		BIT(3)	/* has WAN port on PHY4 */
 #define RBSPI_HAS_SSR		BIT(4)	/* has an SSR on SPI bus 0 */
 #define RBSPI_HAS_POE		BIT(5)
-#define RBSPI_HAS_MDIO1		BIT(6)
-#define RBSPI_HAS_PCI		BIT(7)
+#define RBSPI_HAS_POE_MK BIT(6) /* has a smart PoE micro-controller on SPI bus 0 */
+#define RBSPI_HAS_MDIO1		BIT(7)
+#define RBSPI_HAS_PCI		BIT(8)
 
 #define RB_ROUTERBOOT_OFFSET    0x0000
 #define RB_BIOS_SIZE            0x1000
@@ -219,6 +223,10 @@ static struct gpio_led rbhapl_leds[] __initdata = {
 #define RB952_GPIO_LED_LAN5	RBSPI_SSR_GPIO(RB952_SSR_BIT_LED_LAN5)
 #define RB952_GPIO_LED_WLAN	RBSPI_SSR_GPIO(RB952_SSR_BIT_LED_WLAN)
 
+/* RB 750-r2(HB) with POE v2 */
+#define RB750R2_ATTINY_CS			12
+#define RB750R2_ATTINY_RESET	14
+
 static struct gpio_led rb952_leds[] __initdata = {
 	{
 		.name = "rb:green:user",
@@ -252,22 +260,28 @@ static struct gpio_led rb952_leds[] __initdata = {
 };
 
 
-/* RB 962UiGS-5HacT2HnT gpios */
-#define RB962_GPIO_POE_STATUS	2
-#define RB962_GPIO_POE_POWER	3
-#define RB962_GPIO_LED_USER	12
-#define RB962_GPIO_USB_POWER	13
-#define RB962_GPIO_BTN_RESET	20
+/* RB960PGS/RB962(hEX PoE) gpios */
+#define RB96X_GPIO_LED_SFP		2
+#define RB96X_GPIO_POE_PWR		3
+#define RB96X_GPIO_SPEAKER		4
+#define RB96X_GPIO_LED_USER		12
+#define RB96X_GPIO_USB_PWR		13
+#define RB96X_GPIO_BTN_RESET	20
 
-static struct gpio_led rb962_leds_gpio[] __initdata = {
+static struct gpio_led rb96x_leds_gpio[] __initdata = {
 	{
+		.name		= "rb:green:sfp",
+		.gpio		= RB96X_GPIO_LED_SFP,
+		.active_low	= 1,
+		.default_state  = LEDS_GPIO_DEFSTATE_ON, /* гасим sfp лампочку */
+	}, {
 		.name		= "rb:green:act",
-		.gpio		= RB962_GPIO_LED_USER,
+		.gpio		= RB96X_GPIO_LED_USER, /* для 962-го это sfp лампочка */
 		.active_low	= 1,
-	},
+	}
 };
 
-static const struct ar8327_led_info rb962_leds_ar8327[] = {
+static const struct ar8327_led_info rb96x_leds_ar8327[] = {
 		AR8327_LED_INFO(PHY0_0, HW, "rb:green:port1"),
 		AR8327_LED_INFO(PHY1_0, HW, "rb:green:port2"),
 		AR8327_LED_INFO(PHY2_0, HW, "rb:green:port3"),
@@ -275,7 +289,7 @@ static const struct ar8327_led_info rb962_leds_ar8327[] = {
 		AR8327_LED_INFO(PHY4_0, HW, "rb:green:port5"),
 };
 
-static struct ar8327_pad_cfg rb962_ar8327_pad0_cfg = {
+static struct ar8327_pad_cfg rb96x_ar8327_pad0_cfg = {
 		.mode = AR8327_PAD_MAC_RGMII,
 		.txclk_delay_en = true,
 		.rxclk_delay_en = true,
@@ -284,14 +298,16 @@ static struct ar8327_pad_cfg rb962_ar8327_pad0_cfg = {
 		.mac06_exchange_dis = true,
 };
 
-static struct ar8327_pad_cfg rb962_ar8327_pad6_cfg = {
+/* 6-й порт свитча через RSGMII подключен к SFP и процессору. Пока что еще одна
+	 связка с процессором мне не нужна. Достаточно RGMII к 0-му порту */
+//static struct ar8327_pad_cfg rb96x_ar8327_pad6_cfg = {
 		/* Use SGMII interface for GMAC6 of the AR8337 switch */
-		.mode = AR8327_PAD_MAC_SGMII,
+/*		.mode = AR8327_PAD_MAC_SGMII,
 		.rxclk_delay_en = true,
 		.rxclk_delay_sel = AR8327_CLK_DELAY_SEL0,
-};
+};*/
 
-static struct ar8327_led_cfg rb962_ar8327_led_cfg = {
+static struct ar8327_led_cfg rb96x_ar8327_led_cfg = {
 		.led_ctrl0 = 0xc737c737,
 		.led_ctrl1 = 0x00000000,
 		.led_ctrl2 = 0x00000000,
@@ -299,9 +315,9 @@ static struct ar8327_led_cfg rb962_ar8327_led_cfg = {
 		.open_drain = false,
 };
 
-static struct ar8327_platform_data rb962_ar8327_data = {
-		.pad0_cfg = &rb962_ar8327_pad0_cfg,
-		.pad6_cfg = &rb962_ar8327_pad6_cfg,
+static struct ar8327_platform_data rb96x_ar8327_data = {
+		.pad0_cfg = &rb96x_ar8327_pad0_cfg,
+		//.pad6_cfg = &rb96x_ar8327_pad6_cfg,
 		.port0_cfg = {
 				.force_link = 1,
 				.speed = AR8327_PORT_SPEED_1000,
@@ -309,23 +325,24 @@ static struct ar8327_platform_data rb962_ar8327_data = {
 				.txpause = 1,
 				.rxpause = 1,
 		},
-		.port6_cfg = {
+		/*.port6_cfg = {
 				.force_link = 1,
 				.speed = AR8327_PORT_SPEED_1000,
 				.duplex = 1,
 				.txpause = 1,
 				.rxpause = 1,
-		},
-		.led_cfg = &rb962_ar8327_led_cfg,
-		.num_leds = ARRAY_SIZE(rb962_leds_ar8327),
-		.leds = rb962_leds_ar8327,
+		},*/
+		.led_cfg = &rb96x_ar8327_led_cfg,
+		.num_leds = ARRAY_SIZE(rb96x_leds_ar8327),
+		.leds = rb96x_leds_ar8327,
 };
 
-static struct mdio_board_info rb962_mdio0_info[] = {
+/* описание mdio шины идущей к QCA8337 свитчу */
+static struct mdio_board_info rb96x_mdio0_info[] = {
 		{
 				.bus_id = "ag71xx-mdio.0",
 				.phy_addr = 0,
-				.platform_data = &rb962_ar8327_data,
+				.platform_data = &rb96x_ar8327_data,
 		},
 };
 
@@ -567,6 +584,7 @@ static struct gen_74x164_chip_platform_data rbspi_ssr_data = {
 static int rbspi_spi_cs_gpios[] = {
 	-ENOENT,	/* CS0 is always -ENOENT: natively handled */
 	-ENOENT,	/* CS1 can be updated by the code as necessary */
+	-ENOENT,	/* CS2 can be updated by the code as necessary */
 };
 
 static struct ath79_spi_platform_data rbspi_ath79_spi_data = {
@@ -591,6 +609,11 @@ static struct spi_board_info rbspi_spi_info[] = {
 		.max_speed_hz	= 25000000,
 		.modalias	= "74x164",
 		.platform_data	= &rbspi_ssr_data,
+	}, {
+		.bus_num = 0, /* PoE micro-controller */
+		.chip_select = 2,
+		.max_speed_hz = 2000000,
+		.modalias = "spidev",
 	}
 };
 
@@ -649,12 +672,12 @@ static __init const struct rb_info *rbspi_platform_setup(void)
  */
 static void __init rbspi_peripherals_setup(u32 flags)
 {
-	unsigned spi_n;
+	unsigned spi_n = 1;     /* only one device on bus0 */
 
 	if (flags & RBSPI_HAS_SSR)
-		spi_n = ARRAY_SIZE(rbspi_spi_info);
-	else
-		spi_n = 1;     /* only one device on bus0 */
+		spi_n = 2;
+	if (flags & RBSPI_HAS_POE_MK)
+		spi_n = 3;
 
 	rbspi_ath79_spi_data.num_chipselect = spi_n;
 	rbspi_ath79_spi_data.cs_gpios = rbspi_spi_cs_gpios;
@@ -679,6 +702,13 @@ static void __init rbspi_network_setup(u32 flags, int gmac1_offset,
 	if (flags & RBSPI_HAS_MDIO1)
 		ath79_register_mdio(1, 0x0);
 
+  /* !!! сначала LAN. он будет eth0 !!! */
+	/* init GMAC1 */
+	ath79_init_mac(ath79_eth1_data.mac_addr, ath79_mac_base, gmac1_offset);
+	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
+	ath79_register_eth(1);
+
+  /* теперь WAN. он будет eth1 */
 	if (flags & RBSPI_HAS_WAN4) {
 		ath79_setup_ar934x_eth_cfg(0);
 
@@ -701,11 +731,6 @@ static void __init rbspi_network_setup(u32 flags, int gmac1_offset,
 		ath79_setup_ar934x_eth_cfg(AR934X_ETH_CFG_SW_ONLY_MODE);
 	}
 
-	/* init GMAC1 */
-	ath79_init_mac(ath79_eth1_data.mac_addr, ath79_mac_base, gmac1_offset);
-	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
-	ath79_register_eth(1);
-
 	if (flags & RBSPI_HAS_WLAN0)
 		rbspi_wlan_init(0, wmac0_offset);
 
@@ -782,6 +807,8 @@ static void __init rbspi_952_750r2_setup(u32 flags)
 {
 	if (flags & RBSPI_HAS_SSR)
 		rbspi_spi_cs_gpios[1] = RB952_GPIO_SSR_CS;
+	if (flags & RBSPI_HAS_POE_MK)
+		rbspi_spi_cs_gpios[2] = RB750R2_ATTINY_CS; /* ATtiny PoE v2 */
 
 	rbspi_peripherals_setup(flags);
 
@@ -851,44 +878,59 @@ static void __init rb750upr2_setup(void)
 
 	/* differentiate the hEX lite from the hEX PoE lite */
 	if (strstr(mips_get_machine_name(), "750UP r2"))
-		flags |= RBSPI_HAS_USB | RBSPI_HAS_POE;
+		flags |= RBSPI_HAS_USB | RBSPI_HAS_POE_MK;
 
 	/* differentiate the Powerbox from the hEX lite */
 	else if (strstr(mips_get_machine_name(), "750P r2"))
-		flags |= RBSPI_HAS_POE;
+		flags |= RBSPI_HAS_POE_MK;
 
 	rbspi_952_750r2_setup(flags);
 }
 
 /*
- * Init the hAP ac / 962UiGS-5HacT2HnT hardware (QCA9558).
- * The hAP ac has 5 ethernet ports provided by an AR8337 switch. Port 1 is
+ * Init the hEX POE / RB960PGS and hAP ac / 962UiGS-5HacT2HnT hardware (QCA9558).
+ * The RB960PGS has 5 ethernet ports provided by an AR8337 switch. Port 1 is
  * assigned to WAN, ports 2-5 are assigned to LAN. Port 0 is connected to the
  * SoC, ports 1-5 of the switch are connected to physical ports 1-5 in order.
- * The SFP cage is not assigned by default on RouterOS. Extra work is required
- * to support this interface as it is directly connected to the SoC (eth1).
- * Wireless is provided by a 2.4GHz radio on the SoC (WLAN1) and a 5GHz radio
- * attached via PCI (QCA9880). Red and green WLAN LEDs are populated however
- * they are not attached to GPIOs, extra work is required to support these.
+ * The SFP cage is directly connected to the SoC (eth1).
  * PoE and USB output power control is supported.
+ *
+ * hAP ac / 962UiGS-5HacT2HnT has the same hardware (QCA9558) and additionally
+ * wireless. It is provided by a 2.4GHz radio on the SoC (WLAN1) and a 5GHz radio
+ * attached via PCI (QCA9880). Red and green WLAN LEDs are populated and uses
+ * QCA9880 internal GPIOs.
  */
-static void __init rb962_setup(void)
+static void __init rb96x_setup(void)
 {
-	u32 flags = RBSPI_HAS_USB | RBSPI_HAS_POE | RBSPI_HAS_PCI;
+	u32 flags = RBSPI_HAS_USB;
+
+	/* на всякий случай вместо "74x164" запишем туда "spidev".
+		 фактически там никакого устройства нет. */
+	memcpy(&rbspi_spi_info[1], &rbspi_spi_info[2], sizeof(rbspi_spi_info[2]));
+	rbspi_spi_info[1].chip_select = 1;
 
 	if (!rbspi_platform_setup())
 		return;
 
+	/* differentiate the RB962 from the RB960 */
+	if (strstr(mips_get_machine_name(), "962UiGS")) { /* RB962 */
+		flags |= RBSPI_HAS_POE; /* Simple GPIO PoE */
+		flags |= RBSPI_HAS_WLAN1 | RBSPI_HAS_PCI; /* 5Ghz WiFi */
+	} else { /* RB960 */
+		flags |= RBSPI_HAS_POE_MK; /* SPI micro-controller PoE */
+	}
+
 	rbspi_peripherals_setup(flags);
 
+	/* !!! сначала LAN. он будет eth0 !!! */
 	/* Do not call rbspi_network_setup as we have a discrete switch chip */
 	ath79_eth0_pll_data.pll_1000 = 0xae000000;
 	ath79_eth0_pll_data.pll_100 = 0xa0000101;
 	ath79_eth0_pll_data.pll_10 = 0xa0001313;
 
 	ath79_register_mdio(0, 0x0);
-	mdiobus_register_board_info(rb962_mdio0_info,
-					ARRAY_SIZE(rb962_mdio0_info));
+	mdiobus_register_board_info(rb96x_mdio0_info,
+					ARRAY_SIZE(rb96x_mdio0_info));
 
 	ath79_setup_qca955x_eth_cfg(QCA955X_ETH_CFG_RGMII_EN);
 
@@ -898,26 +940,36 @@ static void __init rb962_setup(void)
 	ath79_eth0_data.mii_bus_dev = &ath79_mdio0_device.dev;
 	ath79_register_eth(0);
 
+	/* SFP будет eth1 */
+	/* GMAC1 is connected to the SGMII interface */
+	ath79_init_mac(ath79_eth1_data.mac_addr, ath79_mac_base, 5);
+	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_SGMII;
+	ath79_eth1_data.speed = SPEED_1000;
+	ath79_eth1_data.duplex = DUPLEX_FULL;
+	ath79_eth1_pll_data.pll_1000 = 0x03000101;
+	ath79_register_eth(1);
+
 	/* WLAN1 MAC is HW MAC + 7 */
-	rbspi_wlan_init(1, 7);
+	if(flags & RBSPI_HAS_WLAN1)
+		rbspi_wlan_init(1, 7); //wlan1 - internal 2.4Ghz WiFI
 
 	if (flags & RBSPI_HAS_USB)
-		gpio_request_one(RB962_GPIO_USB_POWER,
+		gpio_request_one(RB96X_GPIO_USB_PWR,
 				GPIOF_OUT_INIT_HIGH | GPIOF_EXPORT_DIR_FIXED,
 				"USB power");
 
 	/* PoE output GPIO is inverted, set GPIOF_ACTIVE_LOW for consistency */
 	if (flags & RBSPI_HAS_POE)
-		gpio_request_one(RB962_GPIO_POE_POWER,
+		gpio_request_one(RB96X_GPIO_POE_PWR,
 				GPIOF_OUT_INIT_HIGH | GPIOF_ACTIVE_LOW |
 					GPIOF_EXPORT_DIR_FIXED,
 				"POE power");
 
-	ath79_register_leds_gpio(-1, ARRAY_SIZE(rb962_leds_gpio),
-				rb962_leds_gpio);
+	ath79_register_leds_gpio(-1, ARRAY_SIZE(rb96x_leds_gpio),
+				rb96x_leds_gpio);
 
 	/* This device has a single reset button as gpio 20 */
-	rbspi_register_reset_button(RB962_GPIO_BTN_RESET);
+	rbspi_register_reset_button(RB96X_GPIO_BTN_RESET);
 }
 
 /*
@@ -1112,7 +1164,8 @@ MIPS_MACHINE_NONAME(ATH79_MACH_RB_MAPL, "map-hb", rbmapl_setup);
 MIPS_MACHINE_NONAME(ATH79_MACH_RB_941, "H951L", rbhapl_setup);
 MIPS_MACHINE_NONAME(ATH79_MACH_RB_911L, "911L", rb911l_setup);
 MIPS_MACHINE_NONAME(ATH79_MACH_RB_952, "952-hb", rb952_setup);
-MIPS_MACHINE_NONAME(ATH79_MACH_RB_962, "962", rb962_setup);
+MIPS_MACHINE_NONAME(ATH79_MACH_RB_960, "960", rb96x_setup);
+MIPS_MACHINE_NONAME(ATH79_MACH_RB_962, "962", rb96x_setup);
 MIPS_MACHINE_NONAME(ATH79_MACH_RB_750UPR2, "750-hb", rb750upr2_setup);
 MIPS_MACHINE_NONAME(ATH79_MACH_RB_LHG5, "lhg", rblhg_setup);
 MIPS_MACHINE_NONAME(ATH79_MACH_RB_WAP, "wap-hb", rbwap_setup);
diff --git a/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h b/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
index 80f6e1d..65367ba 100644
--- a/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
+++ b/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
@@ -217,6 +217,7 @@ enum ath79_mach_type {
 	ATH79_MACH_RB_951G,			/* Mikrotik RouterBOARD 951G */
 	ATH79_MACH_RB_951U,			/* Mikrotik RouterBOARD 951Ui-2HnD */
 	ATH79_MACH_RB_952,			/* MikroTik RouterBOARD 951Ui-2nD / 952Ui-5ac2nD */
+	ATH79_MACH_RB_960,			/* MikroTik RouterBOARD 960PGS */
 	ATH79_MACH_RB_962,			/* MikroTik RouterBOARD 962UiGS-5HacT2HnT */
 	ATH79_MACH_RB_CAP,			/* Mikrotik RouterBOARD cAP2nD */
 	ATH79_MACH_RB_LHG5,			/* Mikrotik RouterBOARD LHG5 */
diff --git a/target/linux/ar71xx/image/mikrotik.mk b/target/linux/ar71xx/image/mikrotik.mk
index dc0066d..7ec1e8c 100644
--- a/target/linux/ar71xx/image/mikrotik.mk
+++ b/target/linux/ar71xx/image/mikrotik.mk
@@ -40,7 +40,7 @@ define Device/rb-nor-flash-16M
   LOADER_TYPE := elf
   KERNEL_INSTALL := 1
   KERNEL := kernel-bin | lzma | loader-kernel
-  SUPPORTED_DEVICES := rb-750-r2 rb-750up-r2 rb-750p-pbr2 rb-911-2hn rb-911-5hn rb-941-2nd rb-951ui-2nd rb-952ui-5ac2nd rb-962uigs-5hact2hnt rb-lhg-5nd rb-map-2nd rb-mapl-2nd rb-wap-2nd
+  SUPPORTED_DEVICES := rb-750-r2 rb-750up-r2 rb-750p-pbr2 rb-911-2hn rb-911-5hn rb-941-2nd rb-951ui-2nd rb-952ui-5ac2nd rb-960pgs rb-962uigs-5hact2hnt rb-lhg-5nd rb-map-2nd rb-mapl-2nd rb-wap-2nd
   IMAGE/sysupgrade.bin := append-kernel | kernel2minor -s 1024 -e | pad-to $$$$(BLOCKSIZE) | \
 	append-rootfs | pad-rootfs | append-metadata | check-size $$$$(IMAGE_SIZE)
 endef
